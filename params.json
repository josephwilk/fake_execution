{"tagline":"Fake out execution in Ruby and test what was executed","body":"Fake Execution\r\n======\r\n\r\nExecution, but... like... fake.\r\n\r\nUsage \r\n-----\r\n\r\nUsing fake-execution safe which does not automatically activate FakeExecution, you have to do that manually:\r\n\r\n```ruby\r\nrequire 'fake_execution/safe'\r\n\r\nFakeExecution.activate!\r\n\r\n`echo *` # This is not executed\r\n    \r\n`git checkout git://github.com/josephwilk/fake-execution.git`\r\n`touch monkeys`\r\nsystem(\"git add monkeys\")\r\nsystem('git commit -m \"needs more monkeys\"')\r\n`git push`\r\n\r\nFakeExecution.deactivate!\r\n\r\ncmds[0].should =~ /echo/\r\ncmds[1].should =~ /git checkout/\r\ncmds[2].should == 'touch monkeys'\r\n\r\n`echo *` # outputs: echo *\r\n```\r\n\r\nUsing Rspec:\r\n\r\n```ruby\r\nrequire 'fake_execution/spec_helper'\r\n     \r\ndescribe \"monkeys\" do\r\n  include FakeExecution::SpecHelpers\r\n       \r\n  it \"should touch the monkey\" do\r\n    `touch monkey`\r\n         \r\n    cmds[0].should == 'touch monkey'\r\n  end\r\nend\r\n```\r\n\r\nUsing Unsafe mode:\r\n```ruby\r\nrequire 'fake_execution'\r\n     \r\n`touch monkey`\r\nputs cmds[0]  # outputs: touch monkey\r\n```","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Fake execution","google":""}